
Корректировки:

- разбил проект на файлы;

- подкорректировал названия переменных и функций;

- использование struct my_io: адреса структуры my_io и переменной struct ev_io io совпадают благодаря выравниванию. Исходя из данной особенности, возможен доступ к другим элементам структуры. Тестировал в сцепке: Клиент -> Прокси -> предполагаемый сокет с СУБД. Все пакеты доходили по необходимому дескриптору. Более подробно: https://stepik.org/lesson/12582/step/4?unit=3009.

- на тему регулярных выражений. Следовал логике: если пакет содержит необходимые ключевые группы, что проверяется в регулярке, данные помещаюся в std::match,на 163 строке отправляю необходимые данные в файл - myfile << match[2] << std::endl; Соответственно, парсер можно параметризировать регулярками и забирать необходимые "индексы" массива std::match при записи в файл;

- по асинхронности, переделал - 146 строка;

По вышеописанному не претендую на абсолютною верность. Оперирую знаниями, которые есть на текущий момент.

Благодарю.